paths:
  /todos/:
    get:
      summary: Get tasks
      tags:
        - Task
      security:
        - bearerAuth: []
      responses:
        "200":
          description: <b>Ok</b>
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TasksArray"
        "401":
          description: <b>Unauthorized</b>
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
    post:
      summary: Create task
      tags:
        - Task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: do it
                isCompleted:
                  type: boolean
                  example: true
              required:
                - title
                - isCompleted
      responses:
        "201":
          description: <b>Ok</b>
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"

  /todos/{id}:
    patch:
      summary: Update title
      tags:
        - Task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: id tasks
          schema:
            type: string
            example: 96bb5f89-78d6-4a16-89d4-7294f32b92c4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: do it to
              required:
                - title
      responses:
        "200":
          description: <b>Ok</b>
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
    delete:
      summary: Delete task
      tags:
        - Task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: id
          schema:
            type: string
            example: 96bb5f89-78d6-4a16-89d4-7294f32b92c4
      responses:
        "200":
          description: <b>Ok</b>
          content:
            application/json:
              schema:
                type: string
                example: deleted
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"

  /todos/{id}/isCompleted:
    patch:
      summary: Task status update
      tags:
        - Task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Идентификатор задачи
          schema:
            type: string
            example: 96bb5f89-78d6-4a16-89d4-7294f32b92c4
      responses:
        "200":
          description: <b>Ok</b>
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"

components:
  schemas:
    TasksArray:
      type: array
      items:
        $ref: "#/components/schemas/Task"
    Task:
      type: object
      properties:
        id:
          type: string
          example: 96bb5f89-78d6-4a16-89d4-7294f32b92c4
        title:
          type: string
          example: do it
        isCompleted:
          type: boolean
          example: true
        # idUser:
        #   type: string
        #   example: e2930e52-bce3-4b89-b8bd-7f00d88914e1
    Errors:
      type: object
      properties:
        code:
          type: string
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorObject"
    ErrorObject:
      type: object
      properties:
        msg:
          type: string
